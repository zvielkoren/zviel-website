name: Version Tracking

on:
  push:
    branches: 
      - main

jobs:
  update-version:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch full history for versioning
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Generate Version File
      run: |
        # Get the latest tag or start from 0.0.0
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
        
        # Count commits since last tag
        COMMIT_COUNT=$(git rev-list --count HEAD ^$LATEST_TAG)
        
        # Determine version increment based on commit messages
        MAJOR_CHANGES=$(git log $LATEST_TAG..HEAD --oneline | grep -E "BREAKING CHANGE|breaking" | wc -l)
        FEATURE_CHANGES=$(git log $LATEST_TAG..HEAD --oneline | grep -E "^feat" | wc -l)
        FIX_CHANGES=$(git log $LATEST_TAG..HEAD --oneline | grep -E "^fix" | wc -l)
        
        # Increment version
        if [ $MAJOR_CHANGES -gt 0 ]; then
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MAJOR=$((MAJOR + 1))
          NEW_VERSION="${MAJOR}.0.0"
        elif [ $FEATURE_CHANGES -gt 0 ]; then
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          MINOR=$((MINOR + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.0"
        else
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          PATCH=$(echo $LATEST_TAG | cut -d. -f3)
          PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
        fi
        
        # Create version file
        mkdir -p .versions
        echo "{
          \"version\": \"$NEW_VERSION\",
          \"commitCount\": $COMMIT_COUNT,
          \"lastCommitHash\": \"$(git rev-parse HEAD)\",
          \"generatedAt\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\",
          \"changeLog\": $(git log $LATEST_TAG..HEAD --pretty=format:'{"hash":"%h","message":"%s","author":"%an"}' | jq -s .)
        }" > .versions/current.json
    
    - name: Commit Version File
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'actions@github.com'
        git add .versions/current.json
        git commit -m "chore: update version tracking file" || exit 0
        git push
